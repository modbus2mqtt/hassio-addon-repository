import{Ac as q,Ad as V,Bb as F,Cc as O,Cd as H,Db as w,Dc as z,Dd as Q,Ea as r,Ed as B,Fa as i,Ga as f,Gc as R,Gd as G,Hc as A,Hd as j,Jd as $,Kd as U,Nd as K,Oa as c,Q as S,Qd as W,Rd as Y,Sd as Z,Td as J,Ud as X,Vd as ee,W as M,Xd as te,Ya as a,Yc as P,Z as C,Za as b,Zd as ie,_a as x,_c as L,_d as ne,ia as l,ja as _,ka as I,lb as D,mb as E,nb as k,pa as g,ra as v,sa as T,ua as d,wa as p,yd as N}from"./chunk-XATZT6MD.js";var oe=(()=>{class n{template=S(I);constructor(){}static \u0275fac=function(o){return new(o||n)};static \u0275dir=v({type:n,selectors:[["","cdkStepLabel",""]]})}return n})();var ae=(()=>{class n extends oe{static \u0275fac=(()=>{let e;return function(t){return(e||(e=M(n)))(t||n)}})();static \u0275dir=v({type:n,selectors:[["","matStepLabel",""]],features:[T]})}return n})();function _e(n,m){n&1&&a(0,"Enter MQTT Connection")}function ge(n,m){n&1&&(r(0,"mat-error"),a(1," Invalid Connection Data "),i())}function ve(n,m){n&1&&(r(0,"mat-error"),a(1," This field is reqired "),i())}function be(n,m){n&1&&(r(0,"mat-error"),a(1," This field is reqired "),i())}function ye(n,m){n&1&&(r(0,"mat-error"),a(1," This field is reqired "),i())}function Ce(n,m){if(n&1&&(r(0,"mat-option",20),a(1),i()),n&2){let e=m.$implicit;p("value",e),l(),x("",e," ")}}function xe(n,m){if(n&1&&(r(0,"mat-option",20),a(1),i()),n&2){let e=m.$implicit;p("value",e),l(),x("",e," ")}}var Ot=(()=>{class n{constructor(e,o,t,s){this._formBuilder=e,this.entityApiService=o,this.route=t,this.router=s,this.isMqttConfiguredEvent=new C,this.requiredInNonAddonScenario=u=>this.authStatus&&!this.authStatus.hassiotoken?H.required(u):null,this.configObservable=this.entityApiService.getConfiguration(),this.sslFiles=[],this.mqttConnectIcon="cast",this.mqttConnectClass="redIcon",this.mqttConnectMessage="unknown",this.authStatus=void 0,this.configureMqttFormGroup=this._formBuilder.group({mqttserverurl:[null,this.requiredInNonAddonScenario],mqttuser:[null],mqttpassword:[null],mqttkeyfile:[null],mqttcafile:[null]}),this.discoveryLanguageFormControl=new G(null),this.connectMessage="",this.ghPersonalAccessToken=e.control([""]),this.debugComponentsFormControl=e.control([""])}saveDisabled(){return this.mqttConnectIcon!="cast_connected"&&this.authStatus&&!this.authStatus.hassiotoken||this.configureMqttFormGroup.pristine&&this.ghPersonalAccessToken.pristine&&this.debugComponentsFormControl.pristine&&this.discoveryLanguageFormControl.pristine}ngOnInit(){this.configObservable.subscribe(e=>{this.config=e,e.mqttconnect.mqttserverurl&&this.configureMqttFormGroup.get("mqttserverurl").setValue(e.mqttconnect.mqttserverurl),e.mqttconnect.username&&this.configureMqttFormGroup.get("mqttuser").setValue(e.mqttconnect.username),e.mqttconnect.password&&this.configureMqttFormGroup.get("mqttpassword").setValue(e.mqttconnect.password),e.mqttdiscoverylanguage&&this.discoveryLanguageFormControl.setValue(e.mqttdiscoverylanguage),e.debugComponents&&this.debugComponentsFormControl.setValue(e.debugComponents),this.entityApiService.getSslFiles().subscribe(o=>{this.sslFiles=o}),this.entityApiService.getUserAuthenticationStatus().subscribe(o=>{this.authStatus=o,this.mqttValidate(),e.githubPersonalToken&&this.ghPersonalAccessToken.setValue(e.githubPersonalToken)})})}form2Config(e,o){let t=e.get("mqttserverurl"),s=e.get("mqttuser"),u=e.get("mqttpassword"),h=e.get("mqttkeyfile"),y=e.get("mqttcafile");o&&t&&s&&u&&t.value&&(o.mqttconnect||(o.mqttconnect={}),o.mqttconnect.mqttserverurl=t.value,o.mqttconnect.username=s.value,o.mqttconnect.password=u.value,this.discoveryLanguageFormControl&&this.discoveryLanguageFormControl.value&&(o.mqttdiscoverylanguage=this.discoveryLanguageFormControl.value),y?o.mqttcaFile=y.value?y.value:void 0:delete this.config.mqttcaFile,h?o.mqttcertFile=h.value?h.value:void 0:delete o.mqttcertFile)}onChangekMqttConfig(){this.mqttValidate()}onChangeGithubToken(){}getSslFiles(){return this.entityApiService.getSslFiles()}save(){this.form2Config(this.configureMqttFormGroup,this.config),this.ghPersonalAccessToken&&this.ghPersonalAccessToken.value.length>0&&(this.config.githubPersonalToken=this.ghPersonalAccessToken.value),this.debugComponentsFormControl&&this.debugComponentsFormControl.value.length>0&&(this.config.debugComponents=this.debugComponentsFormControl.value),this.entityApiService.postConfiguration(this.config).subscribe(()=>{this.close()}),this.close()}close(){this.router.navigate(["/"])}hasConfigChanges(){return!this.configureMqttFormGroup.pristine||!this.configureMqttFormGroup.pristine}isMqttConfigComplete(){return this.configureMqttFormGroup.updateValueAndValidity(),this.configureMqttFormGroup.valid}mqttValidate(){let e={};this.form2Config(this.configureMqttFormGroup,e),this.entityApiService.postValidateMqtt(e).subscribe(o=>{let t=this.authStatus!=null&&this.authStatus.hassiotoken;if(o&&o.valid)this.mqttConnectIcon="cast_connected",this.mqttConnectClass="greenIcon",this.mqttConnectMessage="connected";else{this.mqttConnectIcon="cast",this.mqttConnectClass=t?"greenIcon":"redIcon";let s=o.message;t&&(s=s+`
Modbus <=> MQTT uses Home Assistants MQTT connection parameters`),this.mqttConnectMessage=!o||!o.message?"error":s}})}static{this.\u0275fac=function(o){return new(o||n)(_(W),_(N),_(F),_(w))}}static{this.\u0275cmp=g({type:n,selectors:[["app-configure"]],outputs:{isMqttConfiguredEvent:"isMqttConfiguredEvent"},decls:71,vars:14,consts:[[1,"flexrows"],[1,"width350pt","card"],[1,"width200pt"],[1,"flexcolumns",3,"formGroup"],[1,"saveCancel"],["mat-icon-button","","matTooltip","Save Changes","color","primary",1,"material-icons","app-toolbar-menu","save-button",3,"click","disabled"],["mat-icon-button","","matTooltip","Cancel Changes","color","warn",1,"material-icons","app-toolbar-menu","cancel-button",3,"click"],["matStepLabel",""],[1,"width250pt"],["matInput","","formControlName","mqttserverurl","placeholder","mqtt://mosquitto:1883",3,"change"],[4,"ngIf"],["matInput","","formControlName","mqttuser",3,"change"],["matInput","","formControlName","mqttpassword",3,"change"],["matInput","","formControlName","mqttcafile",3,"selectionChange"],[3,"value",4,"ngFor","ngForOf"],["matInput","","formControlName","mqttkeyfile",3,"selectionChange"],["matInput","",3,"change","formControl"],[3,"ngClass"],[1,"flexcols"],["matInput","",3,"formControl"],[3,"value"]],template:function(o,t){if(o&1&&(r(0,"div")(1,"div",0)(2,"mat-card",1)(3,"mat-card-header")(4,"mat-card-title",2),a(5,"Configure MQTT"),i()(),f(6,"mat-card-content"),r(7,"form",3)(8,"div",4)(9,"button",5),c("click",function(){return t.save()}),r(10,"mat-icon"),a(11,"check_circle"),i()(),r(12,"button",6),c("click",function(){return t.close()}),r(13,"mat-icon"),a(14,"cancel"),i()()(),d(15,_e,1,0,"ng-template",7),r(16,"mat-form-field",8)(17,"mat-label"),a(18,"MQTT server URL"),i(),r(19,"input",9),c("change",function(){return t.onChangekMqttConfig()}),i(),d(20,ge,2,0,"mat-error",10)(21,ve,2,0,"mat-error",10),i(),f(22,"br"),r(23,"mat-form-field",8)(24,"mat-label"),a(25,"User"),i(),r(26,"input",11),c("change",function(){return t.onChangekMqttConfig()}),i(),d(27,be,2,0,"mat-error",10),i(),f(28,"br"),r(29,"mat-form-field",8)(30,"mat-label"),a(31,"Password"),i(),r(32,"input",12),c("change",function(){return t.onChangekMqttConfig()}),i(),d(33,ye,2,0,"mat-error",10),i(),r(34,"mat-form-field",8)(35,"mat-label"),a(36,"CA certificate File (located in HA ssl directory)"),i(),r(37,"mat-select",13),c("selectionChange",function(){return t.onChangekMqttConfig()}),d(38,Ce,2,2,"mat-option",14),i()(),r(39,"mat-form-field",8)(40,"mat-label"),a(41,"Client key (located in HA ssl directory) for client authentication"),i(),r(42,"mat-select",15),c("selectionChange",function(){return t.onChangekMqttConfig()}),d(43,xe,2,2,"mat-option",14),i()(),r(44,"mat-form-field",8)(45,"mat-label"),a(46,"language"),i(),r(47,"input",16),c("change",function(){return t.onChangekMqttConfig()}),i()(),r(48,"div",17)(49,"mat-icon"),a(50),i(),a(51),i()()(),r(52,"div",18)(53,"mat-card",1)(54,"mat-card-header")(55,"mat-card-title"),a(56,"Configure Github"),i()(),r(57,"mat-card-content")(58,"mat-form-field",8)(59,"mat-label"),a(60,"Personal Access Token"),i(),r(61,"input",16),c("change",function(){return t.onChangeGithubToken()}),i()()()(),r(62,"mat-card",1)(63,"mat-card-header")(64,"mat-card-title"),a(65,"Configure Debug"),i()(),r(66,"mat-card-content")(67,"mat-form-field",8)(68,"mat-label"),a(69,"Debug components"),i(),f(70,"input",19),i()()()()()()),o&2){let s,u,h;l(7),p("formGroup",t.configureMqttFormGroup),l(2),p("disabled",t.saveDisabled()),l(11),p("ngIf",t.configureMqttFormGroup.hasError("invalidConnection")!=null),l(),p("ngIf",((s=t.configureMqttFormGroup.get("mqttserverurl"))==null?null:s.hasError("required"))!=null),l(6),p("ngIf",((u=t.configureMqttFormGroup.get("mqttuser"))==null?null:u.hasError("required"))!=null),l(6),p("ngIf",((h=t.configureMqttFormGroup.get("mqttpassword"))==null?null:h.hasError("required"))!=null),l(5),p("ngForOf",t.sslFiles),l(5),p("ngForOf",t.sslFiles),l(4),p("formControl",t.discoveryLanguageFormControl),l(),p("ngClass",t.mqttConnectClass),l(2),b(t.mqttConnectIcon),l(),b(t.mqttConnectMessage),l(10),p("formControl",t.ghPersonalAccessToken),l(9),p("formControl",t.debugComponentsFormControl)}},dependencies:[J,te,X,ee,Y,j,V,Q,B,Z,$,U,K,L,P,A,ae,R,O,ie,k,z,ne,E,q,D],styles:[".mat-mdc-card-header[_ngcontent-%COMP%]{font-weight:700;background-color:#cff5f8;display:flex;min-height:4em;padding-top:1em}"]})}}return n})();export{Ot as ConfigureComponent};
/**i18n:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855*/
