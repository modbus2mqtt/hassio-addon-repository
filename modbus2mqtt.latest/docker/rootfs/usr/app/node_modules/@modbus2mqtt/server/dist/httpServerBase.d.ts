import * as http from 'http';
import { NextFunction, Request } from 'express';
import * as express from 'express';
import { MqttValidationResult } from './config';
import { HttpErrorsEnum } from '@modbus2mqtt/specification.shared';
import { apiUri } from '@modbus2mqtt/server.shared';
export declare class HttpServerBase {
    private angulardir;
    protected app: express.Application;
    languages: string[];
    server: http.Server<typeof http.IncomingMessage, typeof http.ServerResponse>;
    constructor(angulardir?: string);
    private statics;
    private ingressUrl;
    returnResult(req: Request, res: http.ServerResponse, code: HttpErrorsEnum, message: any, cb?: () => void, object?: any): void;
    listen(listenFunction: () => void): void;
    close(): void;
    private static getAuthTokenFromHeader;
    static getAuthTokenFromUrl(url: string): string | undefined;
    protected static validateUserToken(req: Request, token: string | undefined): MqttValidationResult;
    private getDirectoryForLanguage;
    private initStatics;
    get<T extends Request>(url: apiUri, func: (req: T, response: any) => void): void;
    post<T extends Request>(url: apiUri, func: (req: T, response: any) => void): void;
    delete<T extends Request>(url: apiUri, func: (req: T, response: any) => void): void;
    validate(): void;
    authenticate(req: Request, res: http.ServerResponse, next: any): void;
    initApp(): void;
    init(): Promise<void>;
    private compareIngressUrl;
    private sendIndexFile;
    private processStaticAngularFiles;
    processAll(req: Request, res: express.Response, next: NextFunction): void;
    initBase(): void;
}
