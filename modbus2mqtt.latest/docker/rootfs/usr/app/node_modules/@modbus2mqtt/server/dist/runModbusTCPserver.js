"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const commander_1 = require("commander");
const ts_node_1 = require("ts-node");
const specification_1 = require("@modbus2mqtt/specification");
const debug_1 = tslib_1.__importDefault(require("debug"));
const config_1 = require("./config");
const process_1 = tslib_1.__importDefault(require("process"));
const modbusTCPserver_1 = require("./modbusTCPserver");
const debug = (0, debug_1.default)('modbusTCPserver');
const log = new specification_1.Logger('modbusTCPserver');
let cli = new commander_1.Command();
cli.version(ts_node_1.VERSION);
cli.usage('--yaml <yaml-dir> --busid <buis id number>');
cli.option('-y, --yaml <yaml-dir>', 'set directory for add on configuration');
cli.option('-b, --busid <busid>', 'starts Modbus TCP server for the given yaml-dir and bus');
cli.parse(process_1.default.argv);
let options = cli.opts();
if (options['yaml']) {
    config_1.Config.yamlDir = options['yaml'];
    specification_1.ConfigSpecification.yamlDir = options['yaml'];
}
else {
    config_1.Config.yamlDir = '.';
    specification_1.ConfigSpecification.yamlDir = '.';
}
if (options['busid']) {
    (0, modbusTCPserver_1.startModbusTCPserver)(specification_1.ConfigSpecification.yamlDir, parseInt(options['busid']));
}
else
    log.log(specification_1.LogLevelEnum.error, 'Unable to start Modbus TCP server invalid argument: ' + options['busid']);
//# sourceMappingURL=runModbusTCPserver.js.map