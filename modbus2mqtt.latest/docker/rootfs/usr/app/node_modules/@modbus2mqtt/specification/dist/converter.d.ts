import { Ientity, ModbusRegisterType, Ispecification, Converters } from '@modbus2mqtt/specification.shared';
export interface ReadRegisterResult {
    data: Array<number>;
    buffer: Buffer;
}
export declare abstract class Converter {
    protected component: Converters;
    constructor(component: Converters);
    getModbusLength(_entity: Ientity): number;
    abstract modbus2mqtt(spec: Ispecification, entityid: number, value: ReadRegisterResult): number | string;
    abstract mqtt2modbus(spec: Ispecification, entityid: number, _value: number | string): ReadRegisterResult;
    getRequiredParameters(): string[];
    getOptionalParameters(): string[];
    publishModbusValues(): boolean;
    abstract getModbusRegisterTypes(): ModbusRegisterType[];
    getParameterType(_entity: Ientity): string | undefined;
}
