"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ValueConverter = void 0;
const converter_1 = require("./converter");
const specification_shared_1 = require("@modbus2mqtt/specification.shared");
class ValueConverter extends converter_1.Converter {
    mqtt2modbus(spec, entityid, _value) {
        throw new Error('fixed value has no modbus value.');
    }
    getModbusRegisterTypes() {
        return [specification_shared_1.ModbusRegisterType.AnalogInputs, specification_shared_1.ModbusRegisterType.HoldingRegister];
    }
    constructor(component) {
        if (!component)
            component = 'value';
        super(component);
    }
    modbus2mqtt(spec, entityid) {
        let entity = spec.entities.find((e) => e.id == entityid);
        if (entity && entity.converterParameters.value)
            return entity.converterParameters.value;
        else
            return '';
    }
}
exports.ValueConverter = ValueConverter;
//# sourceMappingURL=valueconverter.js.map