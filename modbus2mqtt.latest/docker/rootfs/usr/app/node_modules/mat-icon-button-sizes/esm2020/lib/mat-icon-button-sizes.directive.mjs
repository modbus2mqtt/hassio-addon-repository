import { Directive } from '@angular/core';
import * as i0 from "@angular/core";
export class MatLargeIconButtonDirective {
    constructor(elementRef) {
        this.elementRef = elementRef;
        elementRef.nativeElement.classList.add('mat-large-icon-button');
    }
}
MatLargeIconButtonDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.1", ngImport: i0, type: MatLargeIconButtonDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
MatLargeIconButtonDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.0.1", type: MatLargeIconButtonDirective, selector: "button[mat-large-icon-button]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.1", ngImport: i0, type: MatLargeIconButtonDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'button[mat-large-icon-button]',
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });
export class MatMediumIconButtonDirective {
    constructor(elementRef) {
        this.elementRef = elementRef;
        elementRef.nativeElement.classList.add('mat-medium-icon-button');
    }
}
MatMediumIconButtonDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.1", ngImport: i0, type: MatMediumIconButtonDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
MatMediumIconButtonDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.0.1", type: MatMediumIconButtonDirective, selector: "button[mat-medium-icon-button]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.1", ngImport: i0, type: MatMediumIconButtonDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'button[mat-medium-icon-button]',
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });
export class MatSmallIconButtonDirective {
    constructor(elementRef) {
        this.elementRef = elementRef;
        elementRef.nativeElement.classList.add('mat-small-icon-button');
    }
}
MatSmallIconButtonDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.1", ngImport: i0, type: MatSmallIconButtonDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
MatSmallIconButtonDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.0.1", type: MatSmallIconButtonDirective, selector: "button[mat-small-icon-button]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.1", ngImport: i0, type: MatSmallIconButtonDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'button[mat-small-icon-button]',
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });
export class MatTinyIconButtonDirective {
    constructor(elementRef) {
        this.elementRef = elementRef;
        elementRef.nativeElement.classList.add('mat-tiny-icon-button');
    }
}
MatTinyIconButtonDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.1", ngImport: i0, type: MatTinyIconButtonDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
MatTinyIconButtonDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.0.1", type: MatTinyIconButtonDirective, selector: "button[mat-tiny-icon-button]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.1", ngImport: i0, type: MatTinyIconButtonDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'button[mat-tiny-icon-button]',
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0LWljb24tYnV0dG9uLXNpemVzLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL21hdC1pY29uLWJ1dHRvbi1zaXplcy9zcmMvbGliL21hdC1pY29uLWJ1dHRvbi1zaXplcy5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBYyxNQUFNLGVBQWUsQ0FBQzs7QUFLdEQsTUFBTSxPQUFPLDJCQUEyQjtJQUNyQyxZQUFvQixVQUFzQjtRQUF0QixlQUFVLEdBQVYsVUFBVSxDQUFZO1FBQ3ZDLFVBQVUsQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO0lBQ25FLENBQUM7O3dIQUhTLDJCQUEyQjs0R0FBM0IsMkJBQTJCOzJGQUEzQiwyQkFBMkI7a0JBSHZDLFNBQVM7bUJBQUM7b0JBQ1IsUUFBUSxFQUFFLCtCQUErQjtpQkFDM0M7O0FBVUQsTUFBTSxPQUFPLDRCQUE0QjtJQUN0QyxZQUFvQixVQUFzQjtRQUF0QixlQUFVLEdBQVYsVUFBVSxDQUFZO1FBQ3ZDLFVBQVUsQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO0lBQ3BFLENBQUM7O3lIQUhTLDRCQUE0Qjs2R0FBNUIsNEJBQTRCOzJGQUE1Qiw0QkFBNEI7a0JBSHhDLFNBQVM7bUJBQUM7b0JBQ1IsUUFBUSxFQUFFLGdDQUFnQztpQkFDNUM7O0FBVUQsTUFBTSxPQUFPLDJCQUEyQjtJQUNyQyxZQUFvQixVQUFzQjtRQUF0QixlQUFVLEdBQVYsVUFBVSxDQUFZO1FBQ3ZDLFVBQVUsQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO0lBQ25FLENBQUM7O3dIQUhTLDJCQUEyQjs0R0FBM0IsMkJBQTJCOzJGQUEzQiwyQkFBMkI7a0JBSHZDLFNBQVM7bUJBQUM7b0JBQ1IsUUFBUSxFQUFFLCtCQUErQjtpQkFDM0M7O0FBVUQsTUFBTSxPQUFPLDBCQUEwQjtJQUNwQyxZQUFvQixVQUFzQjtRQUF0QixlQUFVLEdBQVYsVUFBVSxDQUFZO1FBQ3ZDLFVBQVUsQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO0lBQ2xFLENBQUM7O3VIQUhTLDBCQUEwQjsyR0FBMUIsMEJBQTBCOzJGQUExQiwwQkFBMEI7a0JBSHRDLFNBQVM7bUJBQUM7b0JBQ1IsUUFBUSxFQUFFLDhCQUE4QjtpQkFDMUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQERpcmVjdGl2ZSh7XG4gICBzZWxlY3RvcjogJ2J1dHRvblttYXQtbGFyZ2UtaWNvbi1idXR0b25dJyxcbn0pXG5leHBvcnQgY2xhc3MgTWF0TGFyZ2VJY29uQnV0dG9uRGlyZWN0aXZlIHtcbiAgIGNvbnN0cnVjdG9yKHByaXZhdGUgZWxlbWVudFJlZjogRWxlbWVudFJlZikge1xuICAgICAgZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ21hdC1sYXJnZS1pY29uLWJ1dHRvbicpO1xuICAgfVxufVxuXG5ARGlyZWN0aXZlKHtcbiAgIHNlbGVjdG9yOiAnYnV0dG9uW21hdC1tZWRpdW0taWNvbi1idXR0b25dJyxcbn0pXG5leHBvcnQgY2xhc3MgTWF0TWVkaXVtSWNvbkJ1dHRvbkRpcmVjdGl2ZSB7XG4gICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpIHtcbiAgICAgIGVsZW1lbnRSZWYubmF0aXZlRWxlbWVudC5jbGFzc0xpc3QuYWRkKCdtYXQtbWVkaXVtLWljb24tYnV0dG9uJyk7XG4gICB9XG59XG5cbkBEaXJlY3RpdmUoe1xuICAgc2VsZWN0b3I6ICdidXR0b25bbWF0LXNtYWxsLWljb24tYnV0dG9uXScsXG59KVxuZXhwb3J0IGNsYXNzIE1hdFNtYWxsSWNvbkJ1dHRvbkRpcmVjdGl2ZSB7XG4gICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpIHtcbiAgICAgIGVsZW1lbnRSZWYubmF0aXZlRWxlbWVudC5jbGFzc0xpc3QuYWRkKCdtYXQtc21hbGwtaWNvbi1idXR0b24nKTtcbiAgIH1cbn1cblxuQERpcmVjdGl2ZSh7XG4gICBzZWxlY3RvcjogJ2J1dHRvblttYXQtdGlueS1pY29uLWJ1dHRvbl0nLFxufSlcbmV4cG9ydCBjbGFzcyBNYXRUaW55SWNvbkJ1dHRvbkRpcmVjdGl2ZSB7XG4gICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpIHtcbiAgICAgIGVsZW1lbnRSZWYubmF0aXZlRWxlbWVudC5jbGFzc0xpc3QuYWRkKCdtYXQtdGlueS1pY29uLWJ1dHRvbicpO1xuICAgfVxufVxuIl19